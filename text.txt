//FUNCTIONAL
//variables
const pads = document.querySelectorAll('.pad')
const playBtn = document.querySelector('.play')
const kickAudio = document.querySelector('.kick-sound')
const snareAudio = document.querySelector('.snare-sound')
const hihatAudio = document.querySelector('.hihat-sound')
const selects = document.querySelectorAll('select')
const muteBtns = document.querySelectorAll('.mute')
const tempoSlider = document.querySelector('.tempo-slider')
// console.log(muteBtns)
let index = 0
let bpm = 150
let isPlaying = null

// functions
const repeat = () => {
  let steps = index % 8
  const activeBar = document.querySelectorAll(`.b${steps}`)
  activeBar.forEach((bar) => {
    bar.style.animation = `playTrack 0.3s alternate ease-in-out 2`
    if (bar.classList.contains('active')) {
      if (bar.classList.contains('kick-pad')) {
        kickAudio.currentTime = 0
        kickAudio.play()
      }
      if (bar.classList.contains('snare-pad')) {
        snareAudio.currentTime = 0
        snareAudio.play()
      }
      if (bar.classList.contains('hihat-pad')) {
        hihatAudio.currentTime = 0
        hihatAudio.play()
      }
    }
  })
  index++
  //   console.log(steps)
}

const start = () => {
  let interval = (60 / bpm) * 1000
  if (!isPlaying) {
    isPlaying = setInterval(() => {
      repeat()
    }, interval)
  } else {
    clearInterval(isPlaying)
    isPlaying = null
  }
}

const updateBtn = () => {
  if (!isPlaying) {
    playBtn.innerText = 'Stop'
    playBtn.classList.add('active')
  } else {
    playBtn.innerText = 'Play'
    playBtn.classList.remove('active')
  }
}
const changeSong = (e) => {
  console.log(e.target.value)
  console.log(e.target.name)
  const selectName = e.target.name
  const selectValue = e.target.value
  switch (selectName) {
    case 'kick-select':
      kickAudio.src = selectValue
      break
    case 'snare-select':
      snareAudio.src = selectValue
      break
    case 'hihat-select':
      hihatAudio.src = selectValue
      break
  }
}

const mute = (e) => {
  // console.log(e.target.getAttribute('data-track'))
  e.target.classList.toggle('active')
  const muteIndex = e.target.getAttribute('data-track')
  if (e.target.classList.contains('active')) {
    switch (muteIndex) {
      case '0':
        kickAudio.volume = 0
        break
      case '1':
        snareAudio.volume = 0
        break
      case '2':
        hihatAudio.volume = 0
        break
    }
  } else {
    switch (muteIndex) {
      case '0':
        kickAudio.volume = 1
        break
      case '1':
        snareAudio.volume = 1
        break
      case '2':
        hihatAudio.volume = 1
        break
    }
  }
}

const changeTempo = (e) => {
  const tempoNumber = document.querySelector('.tempo-nr')
  tempoNumber.innerText = e.target.value
}

const updateTempo = (e) => {
  bpm = e.target.value

  clearInterval(isPlaying)
  if (playBtn.classList.contains('active')) {
    console.log(bpm)
    start()
  }
}

//Some Works
pads.forEach((pad) => {
  pad.addEventListener('click', () => {
    pad.classList.toggle('active')
  })
  pad.addEventListener('animationend', () => {
    pad.style.animation = ''
  })
})

playBtn.addEventListener('click', () => {
  updateBtn()
  start()
})

selects.forEach((select) => {
  select.addEventListener('change', (e) => {
    changeSong(e)
  })
})

muteBtns.forEach((btn) => {
  btn.addEventListener('click', (e) => {
    mute(e)
  })
})

tempoSlider.addEventListener('input', (e) => {
  changeTempo(e)
})

tempoSlider.addEventListener('change', (e) => {
  updateTempo(e)
  if (playBtn.classList.contains('active')) {
    // start()
    console.log(bpm)
    start()
  }
})
